'use strict';

var queryCore = require('@tanstack/query-core');
var useQueries = require('./useQueries.js');
var useQuery = require('./useQuery.js');
var QueryClientProvider = require('./QueryClientProvider.js');
var HydrationBoundary = require('./HydrationBoundary.js');
var QueryErrorResetBoundary = require('./QueryErrorResetBoundary.js');
var useIsFetching = require('./useIsFetching.js');
var useMutationState = require('./useMutationState.js');
var useMutation = require('./useMutation.js');
var useInfiniteQuery = require('./useInfiniteQuery.js');
var isRestoring = require('./isRestoring.js');



exports.useQueries = useQueries.useQueries;
exports.queryOptions = useQuery.queryOptions;
exports.useQuery = useQuery.useQuery;
exports.QueryClientContext = QueryClientProvider.QueryClientContext;
exports.QueryClientProvider = QueryClientProvider.QueryClientProvider;
exports.useQueryClient = QueryClientProvider.useQueryClient;
exports.HydrationBoundary = HydrationBoundary.HydrationBoundary;
exports.QueryErrorResetBoundary = QueryErrorResetBoundary.QueryErrorResetBoundary;
exports.useQueryErrorResetBoundary = QueryErrorResetBoundary.useQueryErrorResetBoundary;
exports.useIsFetching = useIsFetching.useIsFetching;
exports.useIsMutating = useMutationState.useIsMutating;
exports.useMutationState = useMutationState.useMutationState;
exports.useMutation = useMutation.useMutation;
exports.useInfiniteQuery = useInfiniteQuery.useInfiniteQuery;
exports.IsRestoringProvider = isRestoring.IsRestoringProvider;
exports.useIsRestoring = isRestoring.useIsRestoring;
Object.keys(queryCore).forEach(function (k) {
  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () { return queryCore[k]; }
  });
});
//# sourceMappingURL=index.js.map

'use strict';

var _rollupPluginBabelHelpers = require('./_virtual/_rollupPluginBabelHelpers.js');
var utils = require('./utils.js');

var _gcTimeout = /*#__PURE__*/_rollupPluginBabelHelpers.classPrivateFieldLooseKey("gcTimeout");
class Removable {
  constructor() {
    Object.defineProperty(this, _gcTimeout, {
      writable: true,
      value: void 0
    });
  }
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout();
    if (utils.isValidTimeout(this.gcTime)) {
      _rollupPluginBabelHelpers.classPrivateFieldLooseBase(this, _gcTimeout)[_gcTimeout] = setTimeout(() => {
        this.optionalRemove();
      }, this.gcTime);
    }
  }
  updateGcTime(newGcTime) {
    // Default to 5 minutes (Infinity for server-side) if no gcTime is set
    this.gcTime = Math.max(this.gcTime || 0, newGcTime != null ? newGcTime : utils.isServer ? Infinity : 5 * 60 * 1000);
  }
  clearGcTimeout() {
    if (_rollupPluginBabelHelpers.classPrivateFieldLooseBase(this, _gcTimeout)[_gcTimeout]) {
      clearTimeout(_rollupPluginBabelHelpers.classPrivateFieldLooseBase(this, _gcTimeout)[_gcTimeout]);
      _rollupPluginBabelHelpers.classPrivateFieldLooseBase(this, _gcTimeout)[_gcTimeout] = undefined;
    }
  }
}

exports.Removable = Removable;
//# sourceMappingURL=removable.js.map
